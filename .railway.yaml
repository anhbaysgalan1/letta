version: 2
# Setup matching the official Letta template
services:
  # PostgreSQL service directly using Railway's PostgreSQL plugin
  letta_db:
    image: ankane/pgvector:v0.5.1
    envs:
      - key: POSTGRES_USER
        value: ${LETTA_PG_USER}
        prompt: PostgreSQL Username
      - key: POSTGRES_PASSWORD
        value: ${LETTA_PG_PASSWORD}
        prompt: PostgreSQL Password
        sensitive: true
      - key: POSTGRES_DB
        value: ${LETTA_PG_DB}
        prompt: PostgreSQL Database Name
    exposes:
      - port: 5432
        as: 5432
        internal: true
        global: true
        generateDomain: true
    volumes:
      - mountPath: /var/lib/postgresql/data
        volume: postgresql
        persistent: true
      - mountPath: /docker-entrypoint-initdb.d/init.sql
        hostPath: ./init.sql
    healthcheck:
      type: command
      command: "pg_isready -U letta"
      interval: 5000
      timeout: 5000
      retries: 5

  # Main Letta server as per official template
  letta_server:
    image: letta/letta:latest
    dependsOn:
      - service: letta_db
        condition: HEALTHY
    envs:
      - key: LETTA_PG_URI
        value: postgresql://${LETTA_PG_USER}:${LETTA_PG_PASSWORD}@${{service.letta_db.PRIVATE_DOMAIN}}:5432/${LETTA_PG_DB}
      - key: LETTA_DB_HOST
        value: ${{service.letta_db.PRIVATE_DOMAIN}}
      - key: LETTA_SERVER_PASSWORD
        prompt: Letta Server Password (for connecting from app.letta.com)
        sensitive: true
      # LLM API Provider Keys (matching official template)
      - key: OPENAI_API_KEY
        prompt: OpenAI API Key (for GPT models, leave blank if not using)
        sensitive: true
      - key: ANTHROPIC_API_KEY
        prompt: Anthropic API Key (for Claude models, leave blank if not using)
        sensitive: true
      - key: COMPOSIO_API_KEY
        prompt: Composio API Key (for tool library access, leave blank if not using)
        sensitive: true
      - key: GROQ_API_KEY
        prompt: Groq API Key (leave blank if not using)
        sensitive: true
      - key: AZURE_API_KEY
        prompt: Azure API Key (leave blank if not using)
        sensitive: true
      - key: AZURE_BASE_URL
        prompt: Azure Base URL (leave blank if not using)
      - key: AZURE_API_VERSION
        prompt: Azure API Version (leave blank if not using)
      - key: GEMINI_API_KEY
        prompt: Google Gemini API Key (leave blank if not using)
        sensitive: true
    ports:
      - port: 8083
        as: 8083
        global: true
        generateDomain: true
      - port: 8283
        as: 8283
        global: true
        generateDomain: true

  # Optional PgAdmin (not in official template but added for convenience)
  pgadmin:
    image: dpage/pgadmin4:latest
    dependsOn:
      - service: letta_db
        condition: HEALTHY
    envs:
      - key: PGADMIN_DEFAULT_EMAIL
        prompt: PgAdmin Email
        value: ${PGADMIN_DEFAULT_EMAIL}
      - key: PGADMIN_DEFAULT_PASSWORD
        prompt: PgAdmin Password
        value: ${PGADMIN_DEFAULT_PASSWORD}
        sensitive: true
      - key: PGADMIN_LISTEN_PORT
        value: 80
    ports:
      - port: 80
        as: 5050
        global: true
        generateDomain: true
    volumes:
      - mountPath: /var/lib/pgadmin
        volume: pgadmin
        persistent: true

# Define persistent volumes
volumes:
  postgresql:
    persistent: true
    location: /data/postgresql
  pgadmin:
    persistent: true 